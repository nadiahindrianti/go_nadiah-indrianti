package main

import (
	"fmt"
	"sync"
	"time"
)

type Program struct {
	factorial int
	m         sync.Mutex
}

func (fact *Program) number(blng, angka int) {
	fact.m.Lock()
	defer fact.m.Unlock()
	fmt.Println("Faktor dari Bilangan ", blng, "yaitu")
	for angka := 1; angka <= blng; angka++ {
		if blng%angka == 0 {
			fmt.Println(angka)
		}
	}
	fmt.Printf("\n\n\n")
}

func (fact *Program) Cetak(blng2, angka2 int, factor int) {
	fact.m.Lock()
	defer fact.m.Unlock()
	for angka2 := 0; angka2 < 10; angka2++ {
		factor := 0
		if blng2 < angka2 {
			factor += 2
		} else {
			factor += 3
		}

	}

	var nilai []int
	nilai = append(nilai, factor)
	return nilai
}

func main() {
	fact := &Program{}

	go func() {
		fact.number(3, 3)
	}()

	time.Sleep(time.Second * 10)
	return fact.Cetak()
}
